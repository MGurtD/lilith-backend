using Microsoft.EntityFrameworkCore.Migrations;
using System;

#nullable disable

namespace Infrastructure.Migrations
{
    public partial class AddStoredProcedureCopyWorkmaster : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\r\n\r\n");
            migrationBuilder.Sql("CREATE OR REPLACE PROCEDURE public.sp_production_copyworkmaster(\r\n\tIN _referencecode character varying,\r\n\tIN _workmasterid uuid,\r\n\tIN _referenceid uuid)\r\nLANGUAGE 'plpgsql'\r\nAS $BODY$\r\nDECLARE\r\n\t_newWorkmasterId uuid;\r\n\t_newWorkmasterphaseId uuid;\r\n\t_newWorkmasterphaseDetailId uuid;\r\n\t_newWorkmasterphaseBillOfMaterialsId uuid;\r\n\t_rowWorkMasterPhase record;\r\n\t_rowWorkMasterPhaseDetail record;\r\n\t_rowWorkMasterPhaseBillOfMaterials record;\r\nBEGIN\r\n\r\n\tIF _referenceId IS NULL THEN\r\n\t\t-- Crear la referència i capturar l'uuid a _referenceId\r\n\t\t_referenceId := uuid_generate_v4();\r\n\t\tINSERT INTO public.\"References\"(\r\n\t\t\t\"Id\", \"Code\", \"Description\", \"Cost\", \"Price\", \"CreatedOn\", \"UpdatedOn\",\r\n\t\t\t\"Disabled\", \"Version\", \"TaxId\", \"Production\", \"Purchase\", \"Sales\", \"ReferenceTypeId\",\r\n\t\t\t\"ReferenceFormatId\", \"LastPurchaseCost\", \"IsService\"\r\n\t\t)\r\n\t\tSELECT _referenceId, _referenceCode, \"Description\", \"Cost\", \"Price\", NOW(), NOW(),\r\n\t\t\tre.\"Disabled\", \"Version\", \"TaxId\", \"Production\", \"Purchase\", \"Sales\", \"ReferenceTypeId\",\r\n\t\t\t\"ReferenceFormatId\", \"LastPurchaseCost\", \"IsService\"\r\n\t\tFROM public.\"References\" re\r\n\t\tINNER JOIN public.\"WorkMaster\" wo ON re.\"Id\" = wo.\"ReferenceId\"\r\n\t\tWHERE wo.\"Id\" = _workmasterId\r\n\t\tRETURNING \"Id\" INTO _referenceId;\r\n\tEND IF;\r\n\r\n\t-- Crear el workmaster i capturar l'uuid\r\n\t_newWorkmasterId := uuid_generate_v4();\r\n\tINSERT INTO public.\"WorkMaster\"(\"Id\", \"ReferenceId\", \"BaseQuantity\", \"CreatedOn\", \"UpdatedOn\", \"Disabled\")\r\n\tSELECT _newWorkmasterId, _referenceId, \"BaseQuantity\", NOW(), NOW(), \"Disabled\"\r\n\tFROM public.\"WorkMaster\"\r\n\tWHERE \"Id\" = _workmasterId\r\n\tRETURNING \"Id\" INTO _newWorkmasterId;\r\n\r\n\t-- Crear el Workmasterphase\r\n\tFOR _rowWorkMasterPhase IN\t\t\t\t\r\n\t\tSELECT \"Id\", \"Code\", \"Description\", \"WorkMasterId\", \"CreatedOn\", \"UpdatedOn\", \"Disabled\", \"OperatorTypeId\", \"PreferredWorkcenterId\", \"WorkcenterTypeId\", \"Comment\", \"ExternalWorkCost\", \"IsExternalWork\"\r\n\t\tFROM public.\"WorkMasterPhase\"\r\n\t\tWHERE \"WorkMasterId\" = _workmasterId\r\n\tLOOP\r\n\t\t_newWorkmasterphaseId := uuid_generate_v4();\r\n\t\tINSERT INTO public.\"WorkMasterPhase\"(\"Id\", \"Code\", \"Description\", \"WorkMasterId\", \"CreatedOn\", \"UpdatedOn\",\r\n\t\t\t\"Disabled\", \"OperatorTypeId\", \"PreferredWorkcenterId\", \"WorkcenterTypeId\", \"Comment\", \"ExternalWorkCost\", \"IsExternalWork\")\r\n\t\tVALUES (_newWorkmasterphaseId, _rowWorkMasterPhase.\"Code\", _rowWorkMasterPhase.\"Description\", _newWorkmasterId, NOW(), NOW(),\r\n\t\t\t_rowWorkMasterPhase.\"Disabled\", _rowWorkMasterPhase.\"OperatorTypeId\", _rowWorkMasterPhase.\"PreferredWorkcenterId\", _rowWorkMasterPhase.\"WorkcenterTypeId\",\r\n\t\t\t_rowWorkMasterPhase.\"Comment\", _rowWorkMasterPhase.\"ExternalWorkCost\", _rowWorkMasterPhase.\"IsExternalWork\");\r\n\r\n\t\t-- Crear el WorkmasterPhaseDetail\r\n\t\tFOR _rowWorkMasterPhaseDetail IN\r\n\t\t\tSELECT \"Id\", \"WorkMasterPhaseId\", \"MachineStatusId\", \"EstimatedTime\", \"IsCycleTime\", \"CreatedOn\", \"UpdatedOn\", \"Disabled\", \"Comment\", \"Order\"\r\n\t\t\tFROM public.\"WorkMasterPhaseDetail\"\r\n\t\t\tWHERE \"WorkMasterPhaseId\" = _rowWorkMasterPhase.\"Id\"\r\n\t\tLOOP\r\n\t\t\t_newWorkmasterphaseDetailId := uuid_generate_v4();\r\n\t\t\tINSERT INTO public.\"WorkMasterPhaseDetail\"(\"Id\", \"WorkMasterPhaseId\", \"MachineStatusId\", \"EstimatedTime\", \"IsCycleTime\", \r\n\t\t\t\t\"CreatedOn\", \"UpdatedOn\", \"Disabled\", \"Comment\", \"Order\")\r\n\t\t\tVALUES (_newWorkmasterphaseDetailId, _newWorkmasterphaseId, _rowWorkMasterPhaseDetail.\"MachineStatusId\", _rowWorkMasterPhaseDetail.\"EstimatedTime\", _rowWorkMasterPhaseDetail.\"IsCycleTime\", \r\n\t\t\t\tNOW(), NOW(), _rowWorkMasterPhaseDetail.\"Disabled\", _rowWorkMasterPhaseDetail.\"Comment\", _rowWorkMasterPhaseDetail.\"Order\");\r\n\t\tEND LOOP;\r\n\r\n\t\t-- Crear el WorkmasterphaseBillOfMaterials\r\n\t\tFOR _rowWorkMasterPhaseBillOfMaterials IN\r\n\t\t\tSELECT \"Id\", \"WorkMasterPhaseId\", \"ReferenceId\", \"Quantity\", \"Width\", \"CreatedOn\", \"UpdatedOn\", \"Disabled\", \"Diameter\", \"Height\", \"Length\", \"Thickness\"\r\n\t\t\tFROM public.\"WorkMasterPhaseBillOfMaterials\"\r\n\t\t\tWHERE \"WorkMasterPhaseId\" = _rowWorkMasterPhase.\"Id\"\r\n\t\tLOOP\r\n\t\t\t_newWorkmasterphaseBillOfMaterialsId := uuid_generate_v4();\r\n\t\t\tINSERT INTO public.\"WorkMasterPhaseBillOfMaterials\"(\"Id\", \"WorkMasterPhaseId\", \"ReferenceId\", \"Quantity\", \"Width\", \"CreatedOn\", \"UpdatedOn\",\r\n\t\t\t\t\"Disabled\", \"Diameter\", \"Height\", \"Length\", \"Thickness\")\r\n\t\t\tVALUES (_newWorkmasterphaseBillOfMaterialsId, _newWorkmasterphaseId, _rowWorkMasterPhaseBillOfMaterials.\"ReferenceId\", _rowWorkMasterPhaseBillOfMaterials.\"Quantity\", _rowWorkMasterPhaseBillOfMaterials.\"Width\", NOW(), NOW(),\r\n\t\t\t\t_rowWorkMasterPhaseBillOfMaterials.\"Disabled\", _rowWorkMasterPhaseBillOfMaterials.\"Diameter\", _rowWorkMasterPhaseBillOfMaterials.\"Height\", _rowWorkMasterPhaseBillOfMaterials.\"Length\", _rowWorkMasterPhaseBillOfMaterials.\"Thickness\");\r\n\t\tEND LOOP;\r\n\r\n\tEND LOOP;\r\n\r\n\traise notice 'ref id: %', _referenceId;\r\n\traise notice 'new workmaster id: %', _newWorkmasterId;\r\nEND;\r\n$BODY$;\r\nALTER PROCEDURE public.sp_production_copyworkmaster(character varying, uuid, uuid)\r\n    OWNER TO ubuntu;\r\n");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("DROP PROCEDURE IF EXISTS public.sp_production_copyworkmaster(character varying, uuid, uuid)");
            migrationBuilder.Sql("DROP EXTENSION \"uuid-ossp\";\r\n\r\n");
        }
    }
}
